on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release And Upload assets

jobs:
  create-realese:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get version
        id: get_version
        run: |
          TAG=$(basename ${GITHUB_REF})
          echo "::set-output name=TAG::$TAG"
      - name: Create Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-config.yml
          version: ${{ steps.get_version.outputs.TAG }}
          tag: ${{ steps.get_version.outputs.TAG }}
      - uses: actions/setup-node@v3
        with:
          node-version: '20.15'
      - name: Build web
        run: |
          cd frontend
          yarn install
          yarn build
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build chen
        run: |
          mvn clean package -DskipTests
          mkdir -p build chen-${{ steps.get_version.outputs.TAG }}
          rm -f config/application-dev.yml
          mv backend/web/target/web-*.jar chen-${{ steps.get_version.outputs.TAG }}/chen.jar
          mv drivers chen-${{ steps.get_version.outputs.TAG }}/drivers
          mv config chen-${{ steps.get_version.outputs.TAG }}/config
          tar -zcvf chen-${{ steps.get_version.outputs.TAG }}.tar.gz chen-${{ steps.get_version.outputs.TAG }}
          echo $(md5sum chen-${{ steps.get_version.outputs.TAG }}.tar.gz | awk '{print $1}') > build/chen-${{ steps.get_version.outputs.TAG }}.tar.gz.md5
          mv chen-${{ steps.get_version.outputs.TAG }}.tar.gz build/
      - name: Release Upload Assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            build/chen-${{ steps.get_version.outputs.TAG }}.tar.gz
            build/chen-${{ steps.get_version.outputs.TAG }}.tar.gz.md5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: sync chen-release
        env:
          REPO_URL: jumpserver/chen-release
          TAG_NAME: ${{ steps.get_version.outputs.TAG }}
          BRANCH: master
          ACCESS_TOKEN: ${{ secrets.PRIVATE_TOKEN }}
          FILE_PATTERN: "build/*"
        run:  |
          wget "https://github.com/LeeEirc/ghaction/releases/download/v0.0.2/ghrcreate-linux-amd64"
          chmod +x ghrcreate-linux-amd64 && ./ghrcreate-linux-amd64